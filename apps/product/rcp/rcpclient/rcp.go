// Code generated by goctl. DO NOT EDIT!
// Source: rcp.proto

package rcpclient

import (
	"context"

	"go_zero/apps/product/rcp/rcp"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = rcp.Request
	Response = rcp.Response

	Rcp interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultRcp struct {
		cli zrpc.Client
	}
)

func NewRcp(cli zrpc.Client) Rcp {
	return &defaultRcp{
		cli: cli,
	}
}

func (m *defaultRcp) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := rcp.NewRcpClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
